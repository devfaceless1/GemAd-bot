import os
import asyncio
from flask import Flask, request
from telegram import Update, Bot, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = "https://gemad-bot.onrender.com"  # —Ç–≤–æ–π URL –≤–µ–±—Ö—É–∫–∞
MINIAPP_URL = "https://gemad.onrender.com"  # —Ç–≤–æ–π Mini App URL

app = Flask(__name__)
bot = Bot(token=TOKEN)

# –°–æ–∑–¥–∞–µ–º Telegram Application
application = Application.builder().token(TOKEN).build()

# === –ö–æ–º–∞–Ω–¥—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("‚û° –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç", update.effective_user.id)

    # –ö–Ω–æ–ø–∫–∞ —Å Mini App
    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å Mini App", web_app=WebAppInfo(url=MINIAPP_URL))]]
    )
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App üöÄ",
        reply_markup=keyboard
    )

application.add_handler(CommandHandler("start", start))

# === –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook ===
async def set_webhook():
    webhook_info = await bot.get_webhook_info()
    if webhook_info.url != WEBHOOK_URL:
        await bot.delete_webhook()
        await bot.set_webhook(url=WEBHOOK_URL)
        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
    else:
        print("üîÅ Webhook —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# === Flask endpoint ===
@app.route("/", methods=["POST", "GET"])
def webhook():
    if request.method == "POST":
        data = request.get_json(force=True)
        print("üì® Update –æ—Ç Telegram:", data)
        update = Update.de_json(data, bot)
        asyncio.run(process_update(update))
        return "ok"
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ"

# === –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ø–¥–µ–π—Ç–æ–≤ ===
async def process_update(update: Update):
    await application.initialize()
    await application.process_update(update)

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    asyncio.run(set_webhook())
    print("‚úÖ Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))